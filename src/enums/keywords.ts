/**
 * @file Enums - keywords
 * @module esast-util-from-code/enums/keywords
 */

/**
 * Possible keywords.
 *
 * @enum {Lowercase<string>}
 */
enum keywords {
  abstract = 'abstract',
  accessor = 'accessor',
  any = 'any',
  as = 'as',
  assert = 'assert',
  asserts = 'asserts',
  async = 'async',
  await = 'await',
  bigint = 'bigint',
  boolean = 'boolean',
  break = 'break',
  case = 'case',
  catch = 'catch',
  class = 'class',
  const = 'const',
  constructor = 'constructor',
  continue = 'continue',
  debugger = 'debugger',
  declare = 'declare',
  default = 'default',
  delete = 'delete',
  do = 'do',
  else = 'else',
  enum = 'enum',
  export = 'export',
  extends = 'extends',
  false = 'false',
  finally = 'finally',
  for = 'for',
  from = 'from',
  function = 'function',
  get = 'get',
  if = 'if',
  implements = 'implements',
  import = 'import',
  in = 'in',
  infer = 'infer',
  instanceof = 'instanceof',
  interface = 'interface',
  keyof = 'keyof',
  let = 'let',
  meta = 'meta',
  module = 'module',
  namespace = 'namespace',
  never = 'never',
  new = 'new',
  null = 'null',
  number = 'number',
  object = 'object',
  of = 'of',
  out = 'out',
  override = 'override',
  private = 'private',
  protected = 'protected',
  public = 'public',
  readonly = 'readonly',
  return = 'return',
  satisfies = 'satisfies',
  set = 'set',
  static = 'static',
  string = 'string',
  super = 'super',
  switch = 'switch',
  symbol = 'symbol',
  this = 'this',
  throw = 'throw',
  true = 'true',
  try = 'try',
  type = 'type',
  typeof = 'typeof',
  undefined = 'undefined',
  unique = 'unique',
  unknown = 'unknown',
  using = 'using',
  var = 'var',
  void = 'void',
  while = 'while',
  with = 'with',
  yield = 'yield'
}

export default keywords
